// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    // Put your code here:
    // check if any control bit is asserted
    Or(a = load, b = inc, out = loadOrInc);
    Or(a = loadOrInc, b = reset, out = control);

    // by test, these input has priority
    Mux16(a = outVal, b = increased, sel = inc, out = incVal);
    Mux16(a = incVal, b = in, sel = load, out = loadVal);
    Mux16(a = loadVal, b = false, sel = reset, out = regInputVal);

    // increase 1
    Inc16(in = outVal, out = increased);

    Register(in = regInputVal, load = control, out = out, out = outVal);
}
